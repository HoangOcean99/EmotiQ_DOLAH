import React from "react";
import { useState } from "react";
import "./DreamAnalysis.css";

export default function DreamAnalysis() {
  const [dreamText, setDreamText] = useState("");
  const [analysis, setAnalysis] = useState(null);
  const [isAnalyzing, setIsAnalyzing] = useState(false);
  const [dreamHistory, setDreamHistory] = useState([
    {
      id: 1,
      date: "15/01/2025",
      summary: "G·∫∑p ng∆∞·ªùi y√™u c≈©",
      emotion: "Ch√°y",
    },
    {
      id: 2,
      date: "12/01/2025",
      summary: "C∆∞·ªõi v·ª£ gi√†u",
      emotion: "O√°ch x√† l√°ch",
    },
  ]);

  const handleAnalyze = () => {
    if (dreamText.trim() === "") return;

    setIsAnalyzing(true);

    // Simulate AI analysis
    setTimeout(() => {
      setAnalysis({
        summary:
          "Gi·∫•c m∆° c·ªßa b·∫°n ph·∫£n √°nh mong mu·ªën ƒë∆∞·ª£c t·ª± do v√† kh√°m ph√° nh·ªØng ƒëi·ªÅu m·ªõi m·∫ª.",
        symbols: [
          { symbol: "Bay", meaning: "Kh√°t v·ªçng t·ª± do, v∆∞·ª£t qua gi·ªõi h·∫°n" },
          {
            symbol: "B·∫ßu tr·ªùi",
            meaning: "Kh√¥ng gian v√¥ h·∫°n, ti·ªÅm nƒÉng ph√°t tri·ªÉn",
          },
        ],
        emotion: "T√≠ch c·ª±c, l·∫°c quan",
        advice:
          "H√£y t√¨m ki·∫øm nh·ªØng c∆° h·ªôi m·ªõi ƒë·ªÉ ph√°t tri·ªÉn b·∫£n th√¢n. ƒê·ª´ng ng·∫°i th·ª≠ nh·ªØng ƒëi·ªÅu ch∆∞a t·ª´ng l√†m.",
      });
      setIsAnalyzing(false);

      // Add to history
      const newDream = {
        id: dreamHistory.length + 1,
        date: new Date().toLocaleDateString("vi-VN"),
        summary: dreamText.substring(0, 30) + "...",
        emotion: "T√≠ch c·ª±c",
      };
      setDreamHistory([newDream, ...dreamHistory]);
    }, 2000);
  };

  const handleKeyDown = (e) => {
    if (e.key === "Enter" && !e.shiftKey) {
      e.preventDefault();
      handleAnalyze();
    }
  };

  return (
    <div className="dream-analysis-wrapper">
      <div className="dream-analysis-header">
        <h1>Ph√¢n t√≠ch gi·∫•c m∆° üåô</h1>
      </div>

      <div className="dream-analysis-container">
        <div className="dream-main-content">
          <div className="dream-input-section">
            <h2>K·ªÉ cho Emo nghe v·ªÅ gi·∫•c m∆° c·ªßa b·∫°n</h2>
            <p className="dream-subtitle">
              M√¥ t·∫£ chi ti·∫øt gi·∫•c m∆° c·ªßa b·∫°n, Emo s·∫Ω gi√∫p b·∫°n ph√¢n t√≠ch √Ω nghƒ©a
              v√† c·∫£m x√∫c ·∫©n ch·ª©a b√™n trong.
            </p>

            <textarea
              className="dream-textarea"
              placeholder="T·ªëi qua m√¨nh m∆° th·∫•y..."
              value={dreamText}
              onChange={(e) => setDreamText(e.target.value)}
              onKeyDown={handleKeyDown}
              rows={6}
            />

            <button
              className="dream-analyze-btn"
              onClick={handleAnalyze}
              disabled={isAnalyzing || dreamText.trim() === ""}
            >
              {isAnalyzing ? "ƒêang ph√¢n t√≠ch..." : "Ph√¢n t√≠ch gi·∫•c m∆° ‚ú®"}
            </button>
          </div>

          {analysis && (
            <div className="dream-analysis-result">
              <h3>K·∫øt qu·∫£ ph√¢n t√≠ch</h3>

              <div className="analysis-card">
                <div className="analysis-section">
                  <h4>üìù T√≥m t·∫Øt</h4>
                  <p>{analysis.summary}</p>
                </div>

                <div className="analysis-section">
                  <h4>üîÆ Bi·ªÉu t∆∞·ª£ng trong gi·∫•c m∆°</h4>
                  <div className="symbols-grid">
                    {analysis.symbols.map((item, index) => (
                      <div key={index} className="symbol-card">
                        <strong>{item.symbol}</strong>
                        <p>{item.meaning}</p>
                      </div>
                    ))}
                  </div>
                </div>

                <div className="analysis-section">
                  <h4>üí≠ C·∫£m x√∫c</h4>
                  <p>{analysis.emotion}</p>
                </div>

                <div className="analysis-section">
                  <h4>üí° L·ªùi khuy√™n</h4>
                  <p>{analysis.advice}</p>
                </div>
              </div>
            </div>
          )}
        </div>

        <div className="dream-sidebar">
          <div className="dream-history-card">
            <h3>L·ªãch s·ª≠ gi·∫•c m∆°</h3>
            <div className="dream-history-list">
              {dreamHistory.map((dream) => (
                <div key={dream.id} className="dream-history-item">
                  <div className="dream-date">{dream.date}</div>
                  <div className="dream-summary">{dream.summary}</div>
                  <div className="dream-emotion">{dream.emotion}</div>
                </div>
              ))}
            </div>
          </div>

          <div className="dream-tips-card">
            <h3>üí° M·∫πo ghi nh·ªõ gi·∫•c m∆°</h3>
            <ul className="dream-tips-list">
              <li>Ghi l·∫°i ngay khi th·ª©c d·∫≠y</li>
              <li>Ch√∫ √Ω ƒë·∫øn c·∫£m x√∫c trong m∆°</li>
              <li>Ghi nh·ªõ chi ti·∫øt m√†u s·∫Øc, √¢m thanh</li>
              <li>Kh√¥ng ph√°n x√©t, ch·ªâ ghi ch√©p</li>
            </ul>
          </div>
        </div>
      </div>
    </div>
  );
}
